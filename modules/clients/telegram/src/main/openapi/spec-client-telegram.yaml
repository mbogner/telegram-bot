openapi: 3.0.3
info:
  title: Telegram API
  description: Official telegram API.
  version: v1
servers:
  - url: https://api.telegram.org
    description: prod
paths:
  # https://core.telegram.org/bots/api
  /{token}/getMe:
    get:
      tags:
        - Telegram
      summary: A simple method for testing your bot's authentication token. Requires no parameters. Returns basic information about the bot in form of a User object.
      operationId: getMe
      parameters:
        - $ref: '#/components/parameters/TokenPathRequired'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeResponse'
        default:
          description: error schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{token}/getUpdates:
    get:
      tags:
        - Telegram
      summary: A simple method for testing your bot's authentication token. Requires no parameters. Returns basic information about the bot in form of a User object.
      operationId: getUpdates
      parameters:
        - $ref: '#/components/parameters/TokenPathRequired'
        - in: query
          name: offset
          description: Identifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as getUpdates is called with an offset higher than its update_id. The negative offset can be specified to retrieve updates starting from -offset update from the end of the updates queue. All previous updates will forgotten.
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          description: Limits the number of updates to be retrieved. Values between 1-100 are accepted. Defaults to 100.
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
            maximum: 100
        - in: query
          name: timeout
          description: Timeout in seconds for long polling. Defaults to 0, i.e. usual short polling. Should be positive, short polling should be used for testing purposes only.
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - in: query
          name: allowed_updates
          description: A JSON-serialized list of the update types you want your bot to receive. For example, specify [“message”, “edited_channel_post”, “callback_query”] to only receive updates of these types. See Update for a complete list of available update types. Specify an empty list to receive all update types except chat_member (default). If not specified, the previous setting will be used. Please note that this parameter doesn't affect updates created before the call to the getUpdates, so unwanted updates may be received for a short period of time.
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUpdateResponse'
        default:
          description: error schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    GetUpdateResponse:
      properties:
        ok:
          type: boolean
        result:
          type: array
          items:
            $ref: '#/components/schemas/Update'
    GetMeResponse:
      properties:
        ok:
          type: boolean
        result:
          $ref: '#/components/schemas/User'
    Chat:
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        title:
          type: string
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        bio:
          type: string
        has_private_forwards:
          type: boolean
        description:
          type: string
        invite_link:
          type: string
        pinned_message:
          $ref: '#/components/schemas/Message'
        slow_mode_delay:
          type: integer
          format: int32
        message_auto_delete_time:
          type: integer
          format: int32
        has_protected_content:
          type: boolean
        sticker_set_name:
          type: string
        can_set_sticker_set:
          type: boolean
        linked_chat_id:
          type: integer
          format: int64
    Message:
      properties:
        message_id:
          type: integer
          format: int32
        from:
          $ref: '#/components/schemas/User'
        sender_chat:
          $ref: '#/components/schemas/Chat'
        date:
          type: integer
          format: int32
        chat:
          $ref: '#/components/schemas/Chat'
        forward_from:
          $ref: '#/components/schemas/User'
        forward_from_chat:
          $ref: '#/components/schemas/Chat'
        forward_from_message_id:
          type: integer
          format: int32
        forward_signature:
          type: string
        forward_sender_name:
          type: string
        forward_date:
          type: integer
          format: int32
        is_automatic_forward:
          type: boolean
        reply_to_message:
          $ref: '#/components/schemas/Message'
        via_bot:
          $ref: '#/components/schemas/User'
        edit_date:
          type: integer
          format: int32
        has_protected_content:
          type: boolean
        media_group_id:
          type: string
        author_signature:
          type: string
        text:
          type: string
        left_chat_member:
          $ref: '#/components/schemas/User'
        new_chat_title:
          type: string
        delete_chat_photo:
          type: boolean
        group_chat_created:
          type: boolean
        supergroup_chat_created:
          type: boolean
        channel_chat_created:
          type: boolean
        migrate_to_chat_id:
          type: integer
          format: int32
        migrate_from_chat_id:
          type: integer
          format: int32
        pinned_message:
          $ref: '#/components/schemas/Message'
        connected_website:
          type: string

    Update: # https://core.telegram.org/bots/api#getting-updates
      properties:
        update_id:
          type: integer
          format: int32
        message:
          $ref: '#/components/schemas/Message'
        edited_message:
          $ref: '#/components/schemas/Message'
        channel_post:
          $ref: '#/components/schemas/Message'
        edited_channel_post:
          $ref: '#/components/schemas/Message'
    User:
      properties:
        id:
          type: integer
          format: int64
        is_bot:
          type: boolean
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        language_code:
          type: string
        can_join_groups:
          type: boolean
        can_read_all_group_messages:
          type: boolean
        supports_inline_queries:
          type: boolean
    Error:
      type: string
  parameters:
    TokenPathRequired:
      in: path
      name: token
      description: Auth token in the path.
      required: true
      schema:
        type: string
