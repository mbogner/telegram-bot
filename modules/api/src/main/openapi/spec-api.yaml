openapi: 3.0.3
info:
  title: telegram bot api
  description: api to work with the bot
  license:
    name: Apache License v2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: v1
servers:
- url: https://localhost:6170
  description: dev
paths:
  /api/v1/messages:
    get:
      tags:
      - Messages
      summary: Get all messages
      operationId: getMessages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagePage'
        default:
          description: error schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BearerAuth:
        - getMessages
  /api/v1/messages/{id}:
    get:
      tags:
      - Messages
      summary: Get message by id
      operationId: getMessageByBid
      parameters:
      - $ref: '#/components/parameters/idPathRequired'
      - name: name
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: error schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BearerAuth:
        - getMessageByBid
components:
  schemas:
    ArrayMeta:
      properties:
        first:
          type: boolean
          description: Boolean true if it's the first page.
          default: false
        last:
          type: boolean
          description: Boolean true if it's the last page.
          default: false
        number:
          minimum: 0
          type: integer
          description: The requested page.
          format: int32
        number_of_elements:
          minimum: 0
          type: integer
          description: Number of elements on this page.
          format: int32
        size:
          minimum: 0
          type: integer
          description: The requested page size.
          format: int32
        total_elements:
          minimum: 0
          type: integer
          description: Total number of entries matching the query.
          format: int64
        total_pages:
          minimum: 0
          type: integer
          description: Number of pages in total.
          format: int32
        sort:
          type: array
          description: Used values to sort the result.
          items:
            type: string
      description: Used in paginated responses as meta type to have meta info for
        pagination.
    Error:
      properties:
        time:
          type: string
          format: date-time
        code:
          type: string
        title:
          type: string
        message:
          type: string
        args:
          type: array
          items:
            $ref: '#/components/schemas/ErrorArgument'
      description: Custom error object with translated messages.
    ErrorArgument:
      properties:
        key:
          type: string
        value:
          type: string
        type:
          type: string
      description: Arguments used in the error message.
    Message:
      required:
      - text
      properties:
        id:
          type: string
          format: uuid
        text:
          maxLength: 1024
          minLength: 1
          type: string
        createdAt:
          type: string
          format: date-time
    MessagePage:
      properties:
        meta:
          $ref: '#/components/schemas/ArrayMeta'
        content:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          default: []
  parameters:
    idPathRequired:
      name: id
      in: path
      description: Id of a resource.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    pageOptional:
      name: page
      in: query
      description: Pagination parameter. Skips page * size entries.
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
    sizeOptional:
      name: size
      in: query
      description: Max number of results per page.
      required: false
      style: form
      explode: true
      schema:
        maximum: 1000
        minimum: 1
        type: integer
        format: int32
        default: 20
    sortOptional:
      name: sort
      in: query
      description: Paramter to sort by as field(:(asc|desc))?. If missing default
        sort is used. field is the name in the db model not the db field name.
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: array
        items:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
